<?php

namespace Victoire\Widget\PollBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Victoire\Widget\PollBundle\Entity\Question;
use Victoire\Widget\PollBundle\DependencyInjection\Chain\PollQuestionChain;
use Victoire\Widget\PollBundle\Form\Answer\AnswerType;

class QuestionType extends AbstractType implements QuestionTypeInterface
{
    private $pollQuestionChain;

    public function __construct(PollQuestionChain $pollQuestionChain)
    {
        $this->pollQuestionChain = $pollQuestionChain;
    }
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $choices = [];
        foreach ($this->pollQuestionChain->getPollQuestionNames() as $questionName) {
            $choices[] = $questionName;
        }

        $builder
            ->add('title')
            ->add('type', ChoiceType::class, [
               'choices' => $choices,
                'choices_as_values' => true,
                'choice_label' => function($questionName, $key, $index) {
                    return 'widget_poll.pollQuestion.'. $questionName;
                },
                'attr' => [
                    'data-refreshOnChange' => 'true',
                    'data-target' => '.vic-modal-body .vic-container-fluid .vic-tab-pane.vic-active',
                ],
                'mapped' => false,
                'data' => $options['questionType'] ? $options['questionType'] : null,
            ]);
        ;
    }
    public function buildView(FormView $view, FormInterface $form, array $options)
    {
        parent::buildView($view, $form, $options); // TODO: Change the autogenerated stub
        $view->vars['questionTemplate'] = $this->getQuestionFormTemplate();
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => $this->getQuestionClass(),
            'questionType' => null,
            'translation_domain' => 'victoire'
        ));
    }
    
    public function getAnswerType()
    {
        return AnswerType::class;
    }
    
    public function getQuestionClass()
    {
        return Question::class;
    }
    public function getQuestionFormTemplate()
    {
        return "default";
    }
}
